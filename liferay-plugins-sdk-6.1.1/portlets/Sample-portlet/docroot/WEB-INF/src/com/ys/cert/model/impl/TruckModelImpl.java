/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ys.cert.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.ys.cert.model.Truck;
import com.ys.cert.model.TruckModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Truck service. Represents a row in the &quot;Vehicle_Truck&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ys.cert.model.TruckModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TruckImpl}.
 * </p>
 *
 * @author AC70602
 * @see TruckImpl
 * @see com.ys.cert.model.Truck
 * @see com.ys.cert.model.TruckModel
 * @generated
 */
public class TruckModelImpl extends BaseModelImpl<Truck> implements TruckModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a truck model instance should use the {@link com.ys.cert.model.Truck} interface instead.
	 */
	public static final String TABLE_NAME = "Vehicle_Truck";
	public static final Object[][] TABLE_COLUMNS = {
			{ "truckId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "truckName", Types.VARCHAR },
			{ "truckModel", Types.VARCHAR },
			{ "truckModelYear", Types.INTEGER },
			{ "truckColor", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Vehicle_Truck (truckId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,truckName VARCHAR(75) null,truckModel VARCHAR(75) null,truckModelYear INTEGER,truckColor VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Vehicle_Truck";
	public static final String ORDER_BY_JPQL = " ORDER BY truck.truckName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Vehicle_Truck.truckName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ys.cert.model.Truck"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ys.cert.model.Truck"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ys.cert.model.Truck"),
			true);
	public static long TRUCKMODEL_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ys.cert.model.Truck"));

	public TruckModelImpl() {
	}

	public long getPrimaryKey() {
		return _truckId;
	}

	public void setPrimaryKey(long primaryKey) {
		setTruckId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_truckId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Truck.class;
	}

	public String getModelClassName() {
		return Truck.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("truckId", getTruckId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("truckName", getTruckName());
		attributes.put("truckModel", getTruckModel());
		attributes.put("truckModelYear", getTruckModelYear());
		attributes.put("truckColor", getTruckColor());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long truckId = (Long)attributes.get("truckId");

		if (truckId != null) {
			setTruckId(truckId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String truckName = (String)attributes.get("truckName");

		if (truckName != null) {
			setTruckName(truckName);
		}

		String truckModel = (String)attributes.get("truckModel");

		if (truckModel != null) {
			setTruckModel(truckModel);
		}

		Integer truckModelYear = (Integer)attributes.get("truckModelYear");

		if (truckModelYear != null) {
			setTruckModelYear(truckModelYear);
		}

		String truckColor = (String)attributes.get("truckColor");

		if (truckColor != null) {
			setTruckColor(truckColor);
		}
	}

	public long getTruckId() {
		return _truckId;
	}

	public void setTruckId(long truckId) {
		_truckId = truckId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public String getTruckName() {
		if (_truckName == null) {
			return StringPool.BLANK;
		}
		else {
			return _truckName;
		}
	}

	public void setTruckName(String truckName) {
		_columnBitmask = -1L;

		_truckName = truckName;
	}

	public String getTruckModel() {
		if (_truckModel == null) {
			return StringPool.BLANK;
		}
		else {
			return _truckModel;
		}
	}

	public void setTruckModel(String truckModel) {
		_columnBitmask |= TRUCKMODEL_COLUMN_BITMASK;

		if (_originalTruckModel == null) {
			_originalTruckModel = _truckModel;
		}

		_truckModel = truckModel;
	}

	public String getOriginalTruckModel() {
		return GetterUtil.getString(_originalTruckModel);
	}

	public int getTruckModelYear() {
		return _truckModelYear;
	}

	public void setTruckModelYear(int truckModelYear) {
		_truckModelYear = truckModelYear;
	}

	public String getTruckColor() {
		if (_truckColor == null) {
			return StringPool.BLANK;
		}
		else {
			return _truckColor;
		}
	}

	public void setTruckColor(String truckColor) {
		_truckColor = truckColor;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Truck.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Truck toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Truck)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	public Truck toUnescapedModel() {
		return (Truck)this;
	}

	@Override
	public Object clone() {
		TruckImpl truckImpl = new TruckImpl();

		truckImpl.setTruckId(getTruckId());
		truckImpl.setGroupId(getGroupId());
		truckImpl.setCompanyId(getCompanyId());
		truckImpl.setUserId(getUserId());
		truckImpl.setUserName(getUserName());
		truckImpl.setCreateDate(getCreateDate());
		truckImpl.setModifiedDate(getModifiedDate());
		truckImpl.setTruckName(getTruckName());
		truckImpl.setTruckModel(getTruckModel());
		truckImpl.setTruckModelYear(getTruckModelYear());
		truckImpl.setTruckColor(getTruckColor());

		truckImpl.resetOriginalValues();

		return truckImpl;
	}

	public int compareTo(Truck truck) {
		int value = 0;

		value = getTruckName().compareTo(truck.getTruckName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Truck)) {
			return false;
		}

		Truck truck = (Truck)obj;

		long primaryKey = truck.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TruckModelImpl truckModelImpl = this;

		truckModelImpl._originalTruckModel = truckModelImpl._truckModel;

		truckModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Truck> toCacheModel() {
		TruckCacheModel truckCacheModel = new TruckCacheModel();

		truckCacheModel.truckId = getTruckId();

		truckCacheModel.groupId = getGroupId();

		truckCacheModel.companyId = getCompanyId();

		truckCacheModel.userId = getUserId();

		truckCacheModel.userName = getUserName();

		String userName = truckCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			truckCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			truckCacheModel.createDate = createDate.getTime();
		}
		else {
			truckCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			truckCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			truckCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		truckCacheModel.truckName = getTruckName();

		String truckName = truckCacheModel.truckName;

		if ((truckName != null) && (truckName.length() == 0)) {
			truckCacheModel.truckName = null;
		}

		truckCacheModel.truckModel = getTruckModel();

		String truckModel = truckCacheModel.truckModel;

		if ((truckModel != null) && (truckModel.length() == 0)) {
			truckCacheModel.truckModel = null;
		}

		truckCacheModel.truckModelYear = getTruckModelYear();

		truckCacheModel.truckColor = getTruckColor();

		String truckColor = truckCacheModel.truckColor;

		if ((truckColor != null) && (truckColor.length() == 0)) {
			truckCacheModel.truckColor = null;
		}

		return truckCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{truckId=");
		sb.append(getTruckId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", truckName=");
		sb.append(getTruckName());
		sb.append(", truckModel=");
		sb.append(getTruckModel());
		sb.append(", truckModelYear=");
		sb.append(getTruckModelYear());
		sb.append(", truckColor=");
		sb.append(getTruckColor());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.ys.cert.model.Truck");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>truckId</column-name><column-value><![CDATA[");
		sb.append(getTruckId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>truckName</column-name><column-value><![CDATA[");
		sb.append(getTruckName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>truckModel</column-name><column-value><![CDATA[");
		sb.append(getTruckModel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>truckModelYear</column-name><column-value><![CDATA[");
		sb.append(getTruckModelYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>truckColor</column-name><column-value><![CDATA[");
		sb.append(getTruckColor());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Truck.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Truck.class };
	private long _truckId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _truckName;
	private String _truckModel;
	private String _originalTruckModel;
	private int _truckModelYear;
	private String _truckColor;
	private long _columnBitmask;
	private Truck _escapedModel;
}